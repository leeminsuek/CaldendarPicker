//apply plugin: 'com.android.application'
apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'
//apply plugin: 'maven-publish'
def libVersion = '0.0.10'
version = libVersion

ext {
    bintrayRepo = 'library'
    bintrayName = 'Calendar'

    publishedGroupId = 'com.devs.shoki.calendarpicker'
    libraryName = 'Calendar'
    artifact = 'Calendar'

    libraryDescription = '테스트 업로드'

    siteUrl = 'https://github.com/leeminsuek/CalendarPicker'
    gitUrl = 'https://github.com/leeminsuek/CalendarPicker.git'

    libraryVersion = '1.0'

    developerId = 'minseok'
    developerName = 'minseok'
    developerEmail = 'a01050335943@gmail.com'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
//        applicationId "com.devs.shoki.calendarpicker"
        minSdkVersion 9
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
}


dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.1.1'
    compile 'com.android.support:recyclerview-v7:23.2.1'
}

//apply from: 'https://raw.githubusercontent.com/nuuneoi/JCenter/master/installv1.gradle'
//apply from: 'https://raw.githubusercontent.com/nuuneoi/JCenter/master/bintrayv1.gradle'

def siteUrl = 'https://github.com/leeminsuek/CalendarPicker'      // Homepage URL of the library
def gitUrl = 'https://github.com/leeminsuek/CalendarPicker.git'   // Git repository URL
group = "com.devs.shoki.calendarpicker"                      // Maven Group ID for the artifact


install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'jar'

                // Add your description here
                name 'Android Update Checker'
                description = 'The project aims to provide a reusable instrument to check asynchronously if exists any newer released update of your Android app on the Store.'
                url siteUrl

                // Set your license
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'minseok'
                        name 'minseok'
                        email 'a01050335943@gmail.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl

                }
            }
        }
    }
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

// https://github.com/bintray/gradle-bintray-plugin
bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg {
        repo = "library"
        // it is the name that appears in bintray when logged
        name = "CalendarPicker"
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publish = true
        version {
            name = libVersion
            vcsTag = libVersion
//            gpg {
//                sign = true //Determines whether to GPG sign the files. The default is false
//                passphrase = properties.getProperty("bintray.gpg.password") //Optional. The passphrase for GPG signing'
//            }
//            mavenCentralSync {
//                sync = true //Optional (true by default). Determines whether to sync the version to Maven Central.
//                user = properties.getProperty("bintray.oss.user") //OSS user token
//                password = properties.getProperty("bintray.oss.password") //OSS user password
//                close = '1' //Optional property. By default the staging repository is closed and artifacts are released to Maven Central. You can optionally turn this behaviour off (by puting 0 as value) and release the version manually.
//            }
        }
    }
}
